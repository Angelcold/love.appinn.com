====================1==================
1.启动网卡
vi /etc/sysconfig/network-scripts/ifcfg-eth0 

ONBOOT=no
改为
ONBOOT=yes

2.修改主机文件名
vi /etc/sysconfig/network
NETWORKING=yes
HOSTNAME=localhost.localdomain
改为
HOSTNAME=centos6.8A
==注释=========
命令提示符（默认用户名主机名当前目录）
命令提示符主机名不会立即生效
hotname 命令也不会立即生效
重启即可

hostnmae 是 centos6 
点和之后忽略了

2.1 临时修改主机名 
hostname   主机名

3  DNS配置文件
vi /etc/resolv.conf


4. 克隆 后无法上网 修改UUID
vi /etc/sysconfig/network-scripts/ifcfg-eth0 
#删除MAC地址行

rm -rf /etc/udev/rules.d/70-persistent-net.rules 
#删除网卡和MAC地址绑定文件

重启系统




# check OS type
uname -o
uname -m
uname -r
uanme -a
man uname
# check OS type
 $HOSTNMAE
# check Internal IP
hostname -I
# check Internal IP
cul -s http://ipecho.net/plain
# ping
ping -c immoc.com
# check DNS
 cat  /etc/resolv.confv 

关闭网卡
ifdown 网卡设备名
#禁用网卡

ifup 网卡设备名
# 启用网卡

netstat命令用来打印Linux中网络系统的状态信息，可让你得知整个Linux系统的网络情况。

-t : 列出TCP协议端口
-u : 列出UDP协议端口
-n : 直接使用ip地址，而不通过域名服务器；
-l : 仅列出在监听状态网络服务
-a : 列出所有的网络连接

netstat -tuln

netstat -an 

netstat -an | grep ESTABLELISHED

LISTEN  监听状态
ESTABLISHED 状态代表连接已经存在

ESTABLISHED 的行数
netstat -an | grep ESTABLELISHED | wc -l


查看路由表（可以看到网关）
netstat -rn  同样功能  route -n 

此功能一般不用 临时设定网关
route add default gw 192.168.1.1
删除
route del default gw 192.168.1.1

service network restart

注意： 在一台服务器里，连内网的网卡是不能设置网关的。切记！


yum 如何查询套件

$ nslookup www.google.com
bash: nslookup: command not found


The minimal install likely did not come with the bind-utils package, which I believe contains nslookup.

You can install bind-utils with:

sudo yum install bind-utils
In general, you can search for what package provides a command using the yum provides command:

sudo yum provides nslookup

You can use "*/nslookup" and/or "*bin/nslookup" to get that behaviour

sudo yum provides '*bin/nslookup'

同理 lsb-release
sudo yum provides '*bin/lsb-release'



 lsb_release lsb_release命令内核与模块管理 LSB是Linux Standard Base的缩写，lsb_release命令用来显示LSB和特定版本的相关信息。
 如果使用该命令时不带参数，则默认加上-v参数。 -v 显示版本信息。 
 -i 显示发行版的id。
  -d 显示该发行版的描述信息。 
  -r 显示当前系统是发行版的具体版本号。
   -c 发行版代号。
    -a 显示上面的所有信息。 
    -h 显示帮助信息。

来自: http://man.linuxde.net/lsb_release

man  lsb-release

no informan

yum install man


远程连接 
ssh：Xshell (语言设置utf-8)
SFTP：winscp


SSH 命令
ssh  用户名@ip
#远程管理制定Linux服务器

登录文件信息在此文件记录
/root/.ssh/known_hosts


scp  [-r] 用户名@ip:文件路径 本地路径
#下载文件

scp  [-r] 本地路径 用户名@ip:文件路径 
#上传文件


wget -c  imooc.com

file index.html

mv index.html index

file

linux 文件类型与后缀没太大关系

less  的使用方式与 man 打开文档查看方式类似  也与 vi 类似

压缩解压

zip

zip  a.txt a.zip
unzip a.zip

tar -cvf log.tar log2012.log 仅打包，不压缩！

 tar -zcvf log.tar.gz log2012.log 打包后，以 gzip 压缩
 tar -zxvf log.tar.gz log2012.log 打包后，以 gzip 解压缩
 tar -jcvf log.tar.bz2 log2012.log 打包后，以 bzip2 压缩
 tar -jxvf log.tar.bz2 log2012.log 打包后，以 bzip2 解压缩
 tar –cZf jpg.tar.Z *.jpg   将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z
 tar –xZvf file.tar.Z   解压tar.Z

 压　缩：tar -jcv -f filename.tar.bz2 要被压缩的文件或目录名称
 查　询：tar -jtv -f filename.tar.bz2
 解压缩：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录

来自: http://man.linuxde.net/tar





$tar -zxvf ***.tar.gz //以gz结尾
$tar -xjvf ***.tar.bz2 //以bz2结尾
$tar -xvjf ***.tar.xz //以xz结尾

再顺便讲解一下tar的用法：
-c: 建立压缩档案
-x：解压
-t：查看内容
-r：向压缩归档文件末尾追加文件
-u：更新原压缩包中的文件
这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。
-z：有gzip属性的
-j：有bz2属性的
-Z：有compress属性的
-v：显示所有过程
-O：将文件解开到标准输出
下面的参数-f是必须的
-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。
# tar -cf all.tar *.jpg 
这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。
# tar -rf all.tar *.gif 
这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。
# tar -uf all.tar logo.gif 
这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。
# tar -tf all.tar 
这条命令是列出all.tar包中所有文件，-t是列出文件的意思
# tar -xf all.tar 
这条命令是解出all.tar包中所有文件，-x是解开的意思

压缩pwd
tar –cvf jpg.tar *.jpg  将目录里所有jpg文件打包成tar.jpg
tar –czf jpg.tar.gz *.jpg   将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz
tar –cjf jpg.tar.bz2 *.jpg 将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2
tar –cZf jpg.tar.Z *.jpg   将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z
rar a jpg.rar *.jpg rar格式的压缩，需要先下载rar for linux
zip jpg.zip *.jpg   zip格式的压缩，需要先下载zip for linux 
解压
tar –xvf file.tar  解压 tar包
tar -xzvf file.tar.gz 解压tar.gz
tar -xjvf file.tar.bz2   解压 tar.bz2
tar –xZvf file.tar.Z   解压tar.Z
unrar e file.rar 解压rar
unzip file.zip 解压zip

总结
*.tar 用 tar –xvf 解压
*.gz 用 gzip -d或者gunzip 解压
*.tar.gz和*.tgz 用 tar –xzf 解压
*.bz2 用 bzip2 -d或者用bunzip2 解压
*.tar.bz2用tar –xjf 解压
*.Z 用 uncompress 解压
*.tar.Z 用tar –xZf 解压
*.rar 用 unrar e解压
*.zip 用 unzip 解压




cat   重定向 


cat m1 （在屏幕上显示文件ml的内容）
cat m1 m2 （同时显示文件ml和m2的内容）
 at m1 m2 > file （将文件ml和m2合并后放入文件file中）

 0 —— stdin（标准输入）
1 —— stdout（标准输出）
2 —— stderr（标准错误）

重定向将输入文本通过追加模式保存到文件：

echo "this is a text line one" >> test.txt
写入到文件之后，会追加到文件结尾。



标准错误输出：

[root@localhost text]# cat linuxde.net
cat: linuxde.net: No such file or directory
标准错误输出的重定向方法：

方法一：
[root@localhost text]# cat linuxde.net 2> out.txt  //没有任何错误提示，正常运行。
方法二：
[root@localhost text]# cat linuxde.net &> out.txt
因为错误信息被保存到了out.txt文件中。

[root@localhost text]# cat linuxde.net 2> /dev/null
将错误输出丢弃到/dev/null中，/dev/null是一个特殊的设备文件，这个文件接受到任何数据都会被丢系，通常被称为位桶、黑洞。


tee命令
tee命令可以将数据重定向到文件，另一方面还可以提供一份重定向数据的副本作为后续命令的stdin。
在终端打印stdout同时重定向到文件中：

ls | tee out.txt | cat -n
     1  1.sh
     2  1.txt
     3  2.txt

====================2========================
更新

CentOS

1、备份

mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup

2、下载新的CentOS-Base.repo 到/etc/yum.repos.d/

CentOS 5

wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-5.repo
CentOS 6

wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo
CentOS 7

wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
3、之后运行
yum clean all
yum makecache
生成缓存



http://mirrors.163.com/.help/centos.html

http://mirrors.aliyun.com/help/centos

yum -y upgrade 和 yum -y update 区别

分别测试yum -y upgrade和yum -y update

升级前

系统版本：  CentOS5.5

内核版本：  2.6.18-194.el5

升级前做过简单配置文件修改

yum -y upgrade    升级后

系统版本：    centos5.7

内核版本：  2.6.18-194.el5

系统和软件配置不做修改

yum -y update    升级后

系统版本：    centos5.7

内核版本：    2.6.18-238.el5

系统和软件配置文件更新

结论：

yum -y update

升级所有包，改变软件设置和系统设置,系统版本内核都升级

yum -y upgrade

升级所有包，不改变软件设置和系统设置，系统版本升级，内核不改变


=================3=====================================
centos 安装setup小工具
#安装setuptool 
yum install setuptool 

#可以发现执行setup后不全，再安装一个用于系统服务管理 
yum install ntsysv 

#再安装个防火墙，以及setup中配套的防火墙设置、网络设置 
yum install iptables 

#安装setup中配套的防火墙设置 
yum install system-config-securitylevel-tui 

#安装setup中配套的网络设置 
yum install system-config-network-tui

========3.1 字体=========
cento最小化安装不支持中文字体，要显示，必须先安装中文，然后通过远程连接工具显示
最小化英文 安装CentOS 7 后装中文


安装完Centos 7之后，中文支持可以通过以下方法获得：

yum groupinstall "Fonts"
yum groupinstall "Input Methods"

相比于老版本，"Chinese Support" group找不到了，这可能是让很多新手烦恼的地方。

低版本在线安装中文字体也可以是此方式

临时切换到(前提 安装好中文语言包)
LANG=zh_CN.utf-8


==============4 修改linux提示符=============================
$ vi ~/.bashrc
		#在文件最后添加如下设置
		export  PS1='\[[\e[1;31m\]\A\u@\[\e[36m\]\h \w]\$'
		$ source ~/.bashrc #使其设置生效


     \d ：代表日期，格式为weekday month date，例如："Mon Aug 1"
　　\H ：完整的主机名称。例如：我的机器名称为：fc4.linux，则这个名称就是fc4.linux
　　\h ：仅取主机的第一个名字，如上例，则为fc4，.linux则被省略
　　\t ：显示时间为24小时格式，如：HH：MM：SS
　　\T ：显示时间为12小时格式
　　\A ：显示时间为24小时格式：HH：MM
　　\u ：当前用户的账号名称
　　\v ：BASH的版本信息
　　\w ：完整的工作目录名称。家目录会以 ~代替
　　\W ：利用basename取得工作目录名称，所以只会列出最后一个目录
　　\# ：下达的第几个命令
　　\$ ：提示字符，如果是root时，提示符为：# ，普通用户则为：$

 颜色设置
 颜色设置
	在PS1中设置字符序列颜色的格式为：[\e[F;Bm]
	其中“F”为字体颜色，编号30~37；“B”为背景色，编号40~47。

	颜色表：
		前景   背景      颜色
		 ------------------------
		 30      40      黑色   
		 31      41      红色   
		 32      42      绿色   
		 33      43      ***   
		 34      44      蓝色   
		 35      45      紫红色   
		 36      46      青蓝色   
		 37      47      白色  
	效果控制代码：
		代码              意义   
		-------------------------   
		0                 OFF   
		1                 高亮显示   
		4                 underline   
		5                 闪烁   
		7                 反白显示   
		8                 不可见  

	
	说明：
		‘\[\e[32m\]’用来设置‘#\##’的颜色为绿色，#\##就是显示现在运行的是第几条命令
		‘[\e[31m\]’设置‘\u@’的颜色为红色并高亮显示，如果指定多个数字需要用分号隔开。\u@ 就是当前登录的用户名后跟一个‘@’符号。
		‘\[\e[36m\]’设置‘\h\w’为青蓝色，\h表示主机名的第一位，如果主机名为centos6.lampbo.org，那么就显示centos6；\w将显示完整的绝对路径。
		‘\$’ 提示字符，如果是root时，提示符为：# ，普通用户则为：$。
		‘\[\e[m\]’使用来关闭颜色设置的。要是你没有这个的话；那么，你的命令提示符，包括你通过命令提示符输出的东西都是和最后一次的颜色设置相同。


==================5 时间校正================================
# 设置时区
vim /etc/sysconfig/clock
ZONE="America/New_York"       <==改的是這裡啦！
#ZONE="Asia/Shanghai"

# 安装时间伺服器
yum install ntp
[17:09root@centos68B ~]#/etc/init.d/ntpd start



 hwclock [-rw]

-r ：亦即 read ，读出目前 BIOS 內的時間参数；
-w ：亦即 write ，将目前的 Linux 系统时间写入 BIOS 当中啊！

# 2. 查阅 BIOS 时间，並且写入更改过的时间里！
[root ~]# date; hwclock -r
Thu Jul 28 16:34:00 CST 2011
Thu 28 Jul 2011 03:34:57 PM CST  -0.317679 seconds
# 看一看，是否刚好差约一个小時！这就是 BIOS 时间！

[root ~]# hwclock -w; hwclock -r; date
Thu 28 Jul 2011 04:35:12 PM CST  -0.265656 seconds
Thu Jul 28 16:35:11 CST 2011
# 软件时区硬件时区就同步了！



==================6 添加用户==========================
useradd -m  xiao 
passwd 

su xiao
ls 
显示 ls: cannot open directory .: Permission denied

执行 visudo
# User privilege specification 
root    ALL=(ALL) ALL 
xiao    ALL=(ALL) ALL                  <==这一行可以加入，使 xiao 这个人可以使用 sudo

http://www.111cn.net/sys/CentOS/54007.htm
http://www.centoscn.com/CentOS/Intermediate/2013/0803/929.html
http://linux.vbird.org/linux_basic/0410accountmanager.php#visudo


================7===============================

X window图文字模式的切换

那這六個终端介面如何命名呢，系統会将[F1] ~ [F6]命名为tty1 ~ tty6的操作介面环境。

[Ctrl] + [Alt] + [F2] ~ [F6] ：文字介面登入 tty2 ~ tty6 终端；
[Ctrl] + [Alt] + [F1] ：图形介面桌面。

http://linux.vbird.org/linux_basic/0160startlinux.php#manual_man

=================7 sudo !!========= ranger 浏览文件系统===================
 SUDO !!
sudo 这个命令权限委派，在自己平时练习的环境可能遇到的少，但是在企业环境中经常遇到这个命令。因为如果你不知道的话，那每次你在输入长串命令后看到“permission denied”后一定会痛苦不堪。 如何使用sudo !!?很简单。试想你刚输入了如下命令：

apt-get install ranger
一定会出现“Permission denied”，除非你已经登录了足够高权限的账户。

sudo !!就会用sudo的形式运行上一条命令。所以上一条命令就变成了这样：
sudo apt-get install ranger

