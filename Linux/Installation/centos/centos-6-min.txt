====================1==================
1.启动网卡
vi /etc/sysconfig/network-scripts/ifcfg-eth0

ONBOOT=no
改为
ONBOOT=yes

2.修改主机文件名
vi /etc/sysconfig/network
NETWORKING=yes
HOSTNAME=localhost.localdomain
改为
HOSTNAME=centos6.8A
==注释=========
命令提示符（默认用户名主机名当前目录）
命令提示符主机名不会立即生效
hotname 命令也不会立即生效
重启即可

hostnmae 是 centos6
点和之后忽略了

2.1 临时修改主机名
hostname   主机名

3  DNS配置文件
vi /etc/resolv.conf


4. 克隆 后无法上网 修改UUID
vi /etc/sysconfig/network-scripts/ifcfg-eth0
#删除MAC地址行

rm -rf /etc/udev/rules.d/70-persistent-net.rules
#删除网卡和MAC地址绑定文件

重启系统




# check OS type
uname -o
uname -m
uname -r
uanme -a
man uname
# check OS type
 $HOSTNMAE
# check Internal IP
hostname -I
# check Internal IP
cul -s http://ipecho.net/plain
# ping
ping -c immoc.com
# check DNS
 cat  /etc/resolv.confv

关闭网卡
ifdown 网卡设备名
#禁用网卡

ifup 网卡设备名
# 启用网卡

netstat命令用来打印Linux中网络系统的状态信息，可让你得知整个Linux系统的网络情况。

-t : 列出TCP协议端口
-u : 列出UDP协议端口
-n : 直接使用ip地址，而不通过域名服务器；
-l : 仅列出在监听状态网络服务
-a : 列出所有的网络连接

netstat -tuln

netstat -an

netstat -an | grep ESTABLELISHED

LISTEN  监听状态
ESTABLISHED 状态代表连接已经存在

ESTABLISHED 的行数
netstat -an | grep ESTABLELISHED | wc -l


查看路由表（可以看到网关）
netstat -rn  同样功能  route -n

此功能一般不用 临时设定网关
route add default gw 192.168.1.1
删除
route del default gw 192.168.1.1

service network restart

注意： 在一台服务器里，连内网的网卡是不能设置网关的。切记！


yum 如何查询套件

$ nslookup www.google.com
bash: nslookup: command not found


The minimal install likely did not come with the bind-utils package, which I believe contains nslookup.

You can install bind-utils with:

sudo yum install bind-utils
In general, you can search for what package provides a command using the yum provides command:

sudo yum provides nslookup

You can use "*/nslookup" and/or "*bin/nslookup" to get that behaviour

sudo yum provides '*bin/nslookup'

同理 lsb-release
sudo yum provides '*bin/lsb-release'



 lsb_release lsb_release命令内核与模块管理 LSB是Linux Standard Base的缩写，lsb_release命令用来显示LSB和特定版本的相关信息。
 如果使用该命令时不带参数，则默认加上-v参数。 -v 显示版本信息。
 -i 显示发行版的id。
  -d 显示该发行版的描述信息。
  -r 显示当前系统是发行版的具体版本号。
   -c 发行版代号。
    -a 显示上面的所有信息。
    -h 显示帮助信息。

来自: http://man.linuxde.net/lsb_release

man  lsb-release

no informan

yum install man


远程连接
ssh：Xshell (语言设置utf-8)
SFTP：winscp


SSH 命令
ssh  用户名@ip
#远程管理制定Linux服务器

登录文件信息在此文件记录
/root/.ssh/known_hosts


scp  [-r] 用户名@ip:文件路径 本地路径
#下载文件

scp  [-r] 本地路径 用户名@ip:文件路径 
#上传文件


wget -c  imooc.com

file index.html

mv index.html index

file

linux 文件类型与后缀没太大关系

less  的使用方式与 man 打开文档查看方式类似  也与 vi 类似

压缩解压

zip

zip  a.txt a.zip
unzip a.zip

tar -cvf log.tar log2012.log 仅打包，不压缩！

 tar -zcvf log.tar.gz log2012.log 打包后，以 gzip 压缩
 tar -zxvf log.tar.gz log2012.log 打包后，以 gzip 解压缩
 tar -jcvf log.tar.bz2 log2012.log 打包后，以 bzip2 压缩
 tar -jxvf log.tar.bz2 log2012.log 打包后，以 bzip2 解压缩
 tar –cZf jpg.tar.Z *.jpg   将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z
 tar –xZvf file.tar.Z   解压tar.Z

 压　缩：tar -jcv -f filename.tar.bz2 要被压缩的文件或目录名称
 查　询：tar -jtv -f filename.tar.bz2
 解压缩：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录

来自: http://man.linuxde.net/tar





$tar -zxvf ***.tar.gz //以gz结尾
$tar -xjvf ***.tar.bz2 //以bz2结尾
$tar -xvjf ***.tar.xz //以xz结尾

再顺便讲解一下tar的用法：
-c: 建立压缩档案
-x：解压
-t：查看内容
-r：向压缩归档文件末尾追加文件
-u：更新原压缩包中的文件
这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。
-z：有gzip属性的
-j：有bz2属性的
-Z：有compress属性的
-v：显示所有过程
-O：将文件解开到标准输出
下面的参数-f是必须的
-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。
# tar -cf all.tar *.jpg
这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。
# tar -rf all.tar *.gif
这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。
# tar -uf all.tar logo.gif
这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。
# tar -tf all.tar
这条命令是列出all.tar包中所有文件，-t是列出文件的意思
# tar -xf all.tar
这条命令是解出all.tar包中所有文件，-x是解开的意思

压缩pwd
tar –cvf jpg.tar *.jpg  将目录里所有jpg文件打包成tar.jpg
tar –czf jpg.tar.gz *.jpg   将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz
tar –cjf jpg.tar.bz2 *.jpg 将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2
tar –cZf jpg.tar.Z *.jpg   将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z
rar a jpg.rar *.jpg rar格式的压缩，需要先下载rar for linux
zip jpg.zip *.jpg   zip格式的压缩，需要先下载zip for linux
解压
tar –xvf file.tar  解压 tar包
tar -xzvf file.tar.gz 解压tar.gz
tar -xjvf file.tar.bz2   解压 tar.bz2
tar –xZvf file.tar.Z   解压tar.Z
unrar e file.rar 解压rar
unzip file.zip 解压zip

总结
*.tar 用 tar –xvf 解压
*.gz 用 gzip -d或者gunzip 解压
*.tar.gz和*.tgz 用 tar –xzf 解压
*.bz2 用 bzip2 -d或者用bunzip2 解压
*.tar.bz2用tar –xjf 解压
*.Z 用 uncompress 解压
*.tar.Z 用tar –xZf 解压
*.rar 用 unrar e解压
*.zip 用 unzip 解压




cat   重定向


cat m1 （在屏幕上显示文件ml的内容）
cat m1 m2 （同时显示文件ml和m2的内容）
 at m1 m2 > file （将文件ml和m2合并后放入文件file中）

 0 —— stdin（标准输入）
1 —— stdout（标准输出）
2 —— stderr（标准错误）

重定向将输入文本通过追加模式保存到文件：

echo "this is a text line one" >> test.txt
写入到文件之后，会追加到文件结尾。



标准错误输出：

[root@localhost text]# cat linuxde.net
cat: linuxde.net: No such file or directory
标准错误输出的重定向方法：

方法一：
[root@localhost text]# cat linuxde.net 2> out.txt  //没有任何错误提示，正常运行。
方法二：
[root@localhost text]# cat linuxde.net &> out.txt
因为错误信息被保存到了out.txt文件中。

[root@localhost text]# cat linuxde.net 2> /dev/null
将错误输出丢弃到/dev/null中，/dev/null是一个特殊的设备文件，这个文件接受到任何数据都会被丢系，通常被称为位桶、黑洞。


tee命令
tee命令可以将数据重定向到文件，另一方面还可以提供一份重定向数据的副本作为后续命令的stdin。
在终端打印stdout同时重定向到文件中：

ls | tee out.txt | cat -n
     1  1.sh
     2  1.txt
     3  2.txt

====================2========================
更新

CentOS

1、备份

mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup

2、下载新的CentOS-Base.repo 到/etc/yum.repos.d/

CentOS 5

wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-5.repo
CentOS 6

wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo
CentOS 7

wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
3、之后运行
yum clean all
yum makecache
生成缓存



http://mirrors.163.com/.help/centos.html

http://mirrors.aliyun.com/help/centos

yum -y upgrade 和 yum -y update 区别

分别测试yum -y upgrade和yum -y update

升级前

系统版本：  CentOS5.5

内核版本：  2.6.18-194.el5

升级前做过简单配置文件修改

yum -y upgrade    升级后

系统版本：    centos5.7

内核版本：  2.6.18-194.el5

系统和软件配置不做修改

yum -y update    升级后

系统版本：    centos5.7

内核版本：    2.6.18-238.el5

系统和软件配置文件更新

结论：

yum -y update

升级所有包，改变软件设置和系统设置,系统版本内核都升级

yum -y upgrade

升级所有包，不改变软件设置和系统设置，系统版本升级，内核不改变


=================3=====================================
centos 安装setup小工具
#安装setuptool
yum install setuptool

#可以发现执行setup后不全，再安装一个用于系统服务管理
yum install ntsysv

#再安装个防火墙，以及setup中配套的防火墙设置、网络设置
yum install iptables

#安装setup中配套的防火墙设置
yum install system-config-securitylevel-tui

#安装setup中配套的网络设置
yum install system-config-network-tui

========3.1 字体=========
cento最小化安装不支持中文字体，要显示，必须先安装中文，然后通过远程连接工具显示
最小化英文 安装CentOS 7 后装中文


安装完Centos 7之后，中文支持可以通过以下方法获得：

yum groupinstall "Fonts"
yum groupinstall "Input Methods"

相比于老版本，"Chinese Support" group找不到了，这可能是让很多新手烦恼的地方。

低版本在线安装中文字体也可以是此方式

临时切换到(前提 安装好中文语言包)
LANG=zh_CN.utf-8


==============4 修改linux提示符=============================
$ vi ~/.bashrc
		#在文件最后添加如下设置
		export  PS1='\[[\e[1;31m\]\A\u@\[\e[36m\]\h \w]\$'
		$ source ~/.bashrc #使其设置生效


     \d ：代表日期，格式为weekday month date，例如："Mon Aug 1"
　　\H ：完整的主机名称。例如：我的机器名称为：fc4.linux，则这个名称就是fc4.linux
　　\h ：仅取主机的第一个名字，如上例，则为fc4，.linux则被省略
　　\t ：显示时间为24小时格式，如：HH：MM：SS
　　\T ：显示时间为12小时格式
　　\A ：显示时间为24小时格式：HH：MM
　　\u ：当前用户的账号名称
　　\v ：BASH的版本信息
　　\w ：完整的工作目录名称。家目录会以 ~代替
　　\W ：利用basename取得工作目录名称，所以只会列出最后一个目录
　　\# ：下达的第几个命令
　　\$ ：提示字符，如果是root时，提示符为：# ，普通用户则为：$

 颜色设置
 颜色设置
	在PS1中设置字符序列颜色的格式为：[\e[F;Bm]
	其中“F”为字体颜色，编号30~37；“B”为背景色，编号40~47。

	颜色表：
		前景   背景      颜色
		 ------------------------
		 30      40      黑色
		 31      41      红色
		 32      42      绿色
		 33      43      ***
		 34      44      蓝色
		 35      45      紫红色
		 36      46      青蓝色
		 37      47      白色
	效果控制代码：
		代码              意义
		-------------------------
		0                 OFF
		1                 高亮显示
		4                 underline
		5                 闪烁
		7                 反白显示
		8                 不可见


	说明：
		‘\[\e[32m\]’用来设置‘#\##’的颜色为绿色，#\##就是显示现在运行的是第几条命令
		‘[\e[31m\]’设置‘\u@’的颜色为红色并高亮显示，如果指定多个数字需要用分号隔开。\u@ 就是当前登录的用户名后跟一个‘@’符号。
		‘\[\e[36m\]’设置‘\h\w’为青蓝色，\h表示主机名的第一位，如果主机名为centos6.lampbo.org，那么就显示centos6；\w将显示完整的绝对路径。
		‘\$’ 提示字符，如果是root时，提示符为：# ，普通用户则为：$。
		‘\[\e[m\]’使用来关闭颜色设置的。要是你没有这个的话；那么，你的命令提示符，包括你通过命令提示符输出的东西都是和最后一次的颜色设置相同。


==================5 时间校正================================
# 设置时区
vim /etc/sysconfig/clock
ZONE="America/New_York"       <==改的是這裡啦！
#ZONE="Asia/Shanghai"

# 安装时间伺服器
yum install ntp
[17:09root@centos68B ~]#/etc/init.d/ntpd start



 hwclock [-rw]

-r ：亦即 read ，读出目前 BIOS 內的時間参数；
-w ：亦即 write ，将目前的 Linux 系统时间写入 BIOS 当中啊！

# 2. 查阅 BIOS 时间，並且写入更改过的时间里！
[root ~]# date; hwclock -r
Thu Jul 28 16:34:00 CST 2011
Thu 28 Jul 2011 03:34:57 PM CST  -0.317679 seconds
# 看一看，是否刚好差约一个小時！这就是 BIOS 时间！

[root ~]# hwclock -w; hwclock -r; date
Thu 28 Jul 2011 04:35:12 PM CST  -0.265656 seconds
Thu Jul 28 16:35:11 CST 2011
# 软件时区硬件时区就同步了！



==================6 添加用户==========================
useradd -m  xiao
passwd

su xiao
ls
显示 ls: cannot open directory .: Permission denied

执行 visudo
# User privilege specification
root    ALL=(ALL) ALL
xiao    ALL=(ALL) ALL                  <==这一行可以加入，使 xiao 这个人可以使用 sudo

http://www.111cn.net/sys/CentOS/54007.htm
http://www.centoscn.com/CentOS/Intermediate/2013/0803/929.html
http://linux.vbird.org/linux_basic/0410accountmanager.php#visudo


================7===============================

X window图文字模式的切换

那這六個终端介面如何命名呢，系統会将[F1] ~ [F6]命名为tty1 ~ tty6的操作介面环境。

[Ctrl] + [Alt] + [F2] ~ [F6] ：文字介面登入 tty2 ~ tty6 终端；
[Ctrl] + [Alt] + [F1] ：图形介面桌面。

http://linux.vbird.org/linux_basic/0160startlinux.php#manual_man

=================7.1 sudo !!========= ranger 浏览文件系统===================
 SUDO !!
sudo 这个命令权限委派，在自己平时练习的环境可能遇到的少，但是在企业环境中经常遇到这个命令。因为如果你不知道的话，那每次你在输入长串命令后看到“permission denied”后一定会痛苦不堪。 如何使用sudo !!?很简单。试想你刚输入了如下命令：

apt-get install ranger
一定会出现“Permission denied”，除非你已经登录了足够高权限的账户。

sudo !!就会用sudo的形式运行上一条命令。所以上一条命令就变成了这样：
sudo apt-get install ranger



=====================7.2 Linux系统的启动级别==============================
from http://www.cnblogs.com/xiaoluo501395377/archive/2013/04/01/2992755.html

对于绝大多数Linux程序员来说，进入Linux系统后一般看到的是黑乎乎的界面(开发模式)，因为系统如果启动选择开发模式，会减少启动时间，优化内存等。但是通常我们刚安装完Linux系统，然后进去以后是图形的界面，(如果要切换到开发模式，使用快捷键Ctrl + F2即可)，从开发模式返回到图形界面则使用快捷键(Ctrl + F1)，或者在命令行里输入命令 startx 命令就可以切换到图形界面。

注意：如果你是开机启动模式设置的是图形界面启动，则通过快捷键( Ctrl + Alt + F2~F7 )进入到终端界面后，
你输入命令 startx 是返回不了图形界面的。但是如果你开机启动模式设置的是开发模式，则输入命令 statx 就可以返回到图形界面
Linux系统设置系统启动模式的方式可以修改(必须要以root身份登录才能修改)。修改系统启动模式的配置文件是   /etc/inittab。

我们在切换到root用户后，然后 vi /etc/inittab, 就可以修改并查看该配置文件：

[root@xiaoluo ~]:# vi /etc/inittab
在输入上面的命令后，我们可以看到该配置文件里面的信息如下：

# inittab is only used by upstart for the default runlevel.
#
# ADDING OTHER CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.
#
# System initialization is started by /etc/init/rcS.conf
#
# Individual runlevels are started by /etc/init/rc.conf
#
# Ctrl-Alt-Delete is handled by /etc/init/control-alt-delete.conf
#
# Terminal gettys are handled by /etc/init/tty.conf and /etc/init/serial.conf,
# with configuration in /etc/sysconfig/init.
#
# For information on how to write upstart event handlers, or how
# upstart works, see init(5), init(8), and initctl(8).
#
# Default runlevel. The runlevels used are:
#   0 - halt (Do NOT set initdefault to this)
#   1 - Single user mode
#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)
#   3 - Full multiuser mode
#   4 - unused
#   5 - X11
#   6 - reboot (Do NOT set initdefault to this)
#
id:5:initdefault:
~                     
我们之间看到最后那几行，就可以看到Linux系统中默认的系统启动基本一共有7种，分别是：

0：关机(不要设置这个！)
1：单用户(类似于windows操作系统的安全模式)
2：多用户状态没有网络服务     
3：多用户状态由网络服务(在做开发时，通常设置成这个启动级别，直接进入到命令行的界面)
4：系统未使用保留给用户(不要设置这个！)       
5：图形界面(这是linux默认的启动级别，直接进入图形界面)
6：系统重启(不要设置这个！)

下面那句：

id:5:initdefault:   // 设置系统默认的启动级别
就是用来设定系统的默认启动级别，Linux系统中默认是启动级别5，也就是图形界面启动

如果需要修改成默认级别为开发模式，只需要将 5 改成 3 即可

如：

将 id:5:initdefault:  改成   id:3:initdefault:
然后保存退出，重新启动一下系统 输入  reboot 命令即可。

警告：千万不要将启动基本设置为0， 4， 6！！！！！！

这时就会发现进入Linux系统的界面已经变成开发者模式了！

如果我们只是需要在Linux上做开发、部署项目的话，建议一般将系统启动模式设置为 开发模式！

【注】
如果有恶意用户将系统启动级别设置成0、4、6，我们该怎么解决这个问题？

在linux系统启动界面，我们快速按键盘上的 【e】 按钮，然后进入到了grub引导界面(这个根据Linux的版本可能有不同，我的CentOS6.4是需要在启动时按F2进入引导界面，
这个可以根据自己安装的Linux系统在开机时的提示进入引导界面)，
在这个界面中选择第二个选项，然后再按下键盘上的 【e】按钮，在进入修改界面后，在最后输入【 1】(1前面有空格)
这样，linux系统在启动时就会以 单用户级别 启动起来(为什么这里不将其设置成3或者5，是因为linux系统
在启动时首先会去检查 /etc/inittab 文件的设定启动级别，如果在这时设置成5或者3，系统还是进不去，只能设置成1)
在设置好以后，按下键盘的【b】按钮，系统就能重新启动，并进入 单用户级别，这样我们就可以按照之前的方法修改
linux系统的启动级别。


============================7.2 单用户模式下修改Root用户的密码===============================
from http://www.cnblogs.com/xiaoluo501395377/archive/2013/05/19/3087664.html

在linux系统启动界面，我们快速按键盘上的 【e】 按钮，然后进入到了grub引导界面(这个根据Linux的版本可能有不同，我的CentOS6.4是需要在启动时按F2进入引导界面，
这个可以根据自己安装的Linux系统在开机时的提示进入引导界面)，
在这个界面中选择第二个选项，然后再按下键盘上的 【e】按钮，在进入修改界面后，在最后输入【 1】(1前面有空格)
然后我们回车，进入到上层的界面，此时按下键盘上的 b 键就是启动操作系统，此时我们的Linux操作系统就是以单用户的模式登陆了。
我们发现系统非常快速的就进入到了命令行模式下的界面，因为单用户模式是不会启动任何服务的，同时也不需要输入root密码，
就能直接进入到root用户下，此时我们就可以通过passwd 命令来重置我们的root用户的密码


然后我们通过exit命令就可以退出单用户模式，此时操作系统内核就会根据我们之前看到的 /etc/inittab 配置文件中设置的默认启动级别来启动。


这样我们就可以通过在进入GRUB引导时在内核参数里面追加参数 1 或者 single 来进入单用户模式来修改我们的root用户密码。

但是，请注意，因为上面的操作只需要通过单用户模式就可以修改我们的root用户密码，所以说一旦别人有机会接触到我们的服务器主机，那么root用户的密码就很容易被别人修改了，这样当然是非常的不安全的，所以我们还是需要通过GRUB加密来对开启一层密码防护。

通过在 /boot/grub/grub.conf 启动配置中加入以下类似的代码来对grub进行加密：

password --md5 $1$6H92B1$PzoPV63kTMk4uEhZQTAZ//
其中后面那一串是MD5加密算法，这个我们可以通过 grub-md5-crypt 这个命令来生成加密后的算法

[root@xiaoluo ~]# grub-md5-crypt 
Password: 
Retype password: 
$1$UGA2B1$DriIdrVTEgVg95fHHX4H./
[root@xiaoluo ~]# 
在上面的Password、Retype password那里输入我们需要设置的密码，然后就能生成MD5算法加密后的密码，我们将这个加密后的密码添加到

/boot/grub/grub.conf 这个配置文件里即可，例如：

复制代码
[root@xiaoluo ~]# vi /boot/grub/grub.conf 
password --md5 $1$UGA2B1$DriIdrVTEgVg95fHHX4H./

# grub.conf generated by anaconda
#
# Note that you do not have to rerun grub after making changes to this file
# NOTICE:  You do not have a /boot partition.  This means that
#          all kernel and initrd paths are relative to /, eg.
#          root (hd0,1)
#          kernel /boot/vmlinuz-version ro root=/dev/sda2
#          initrd /boot/initrd-[generic-]version.img
#boot=/dev/sda
default=0
timeout=5
splashimage=(hd0,1)/boot/grub/splash.xpm.gz
hiddenmenu
title CentOS (2.6.32-358.el6.x86_64)
        root (hd0,1)
        kernel /boot/vmlinuz-2.6.32-358.el6.x86_64 ro root=UUID=6e24ec7a-2d19-466e-bacc-92750b1f4bef rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet
        initrd /boot/initramfs-2.6.32-358.el6.x86_64.img
复制代码

这个时候我们再次重启一下系统，试着进入到GRUB里面来看看，

我们发现下面的英文提示已经变了，之前可以按键盘上的 e 键进入到GRUB里面，现在按 e 键已经没用了，此时提示我们按 p 键来输入GRUB的密码才能进入到GRUB里面


此时我们输入之前设置的GRUB密码即可，然后界面就会进入到我们熟悉的修改GRUB那里了。

所以说通过GRUB的加密算法我们可以对进入GRUB进行加密，这样就能防止别人恶意进入单用户模式，从而修改root密码了!!

当然，如果我们连这个GRUB的秘密都忘记的话，并且又忘记了root密码，那就真的不能登陆到root用户了。。。。


===================tmux 8===========================================

tmux -a

=====================9 mount挂载===================================================================================================================================
http://www.cnblogs.com/52linux/archive/2012/03/07/2384400.html

http://man.linuxde.net/mkfs
http://man.linuxde.net/fdisk

硬盘分区备忘（主分区，扩展分区和逻辑分区）以及Linux硬盘分区工具parted 介绍
http://blog.csdn.net/bluishglc/article/details/9189437

1. 查询与自动挂载

1.1 查询系统中已经挂载的设备
# mount
1.2 根据配置文件/etc/fstab的内容，自动挂载
# mount -a

未挂载外部设备执行 mount 未其实显示的是 /etc/fstab的内容

2. 挂载命令格式
# mount [-t 文件系统] [-o 特殊选项] 设备文件名 挂在点

选项：
 -t 文件系统：加入文件系统来指定挂载类型，如 ext3, ext4, iso9660等文件系统
注意: iso9660 光盘文件格式

-o 特殊选项：可以指定挂载的额外选项

# mount -o remount,noexec /home
重新挂在/home分区，并使用noexec权限

注意：
noexec 指的是没有执行全选  默认是exec
系统默认挂载点可以不写设备文件名

cd /home
# vi hello.sh

#bin/bash
echo "hello"

chmod 755 hello.sh
./hello.sh

显示没有执行权限

想要由执行权限


# mount -o remount,exec /home
一定记得改回来，否则会影响系统启动



3. 挂载光盘


3.1.插入光盘
3.2.  mkdir  /mnt/cdrom
3.3 ls -l /dev/cdrom
显示 /dev/cdrom -> sr0
/mnt/cdrom 是 /dev/sr0 的软连接

建议挂载光盘使用 mount /dev/sr0 /mnt/cdrom
注意 当系统完全启动时软连接才可以生效，一旦系统有问题或未完全启动，软链接就可能失效
光盘只有只读权限

4. 卸载命令
# umount 设备文件名或挂载点
注意 不可以在挂载目录执行卸载命令，否则会出现设备忙提示



5. 挂在U盘
5.1 查看U盘设备名
# fdisk -l

mount -t vfat /dev/sdb1 /mnt/usb/
也可能是/dev/sdc1 依据系统有几块硬盘 如果是两块 就是/dev/sdc1

注意 vfat 就是 Windows的fat32 单个文件不可以超过4G

Linux默认不支持NTFS文件

1). 想要支持 需要重新编译内核，因为Linux 内核编译时的加入常用驱动
2). 安装 ntfs-3g

即使Linux显示了NTFS文件也是    只读    的

最后解决方法实现文件传输需要使用 FTP 或 winscp



6 .linux 查看文件（夹）所在分区（挂载点）

http://blog.csdn.net/candyguy242/article/details/8088451

Linux下没有盘符的概念，而是将各分区通过挂载到目录（挂载点）来访问实际的磁盘分区，有时候我们想知道某个文件或文件夹是在哪个分区上，
有如下几种方法：

 1)最简单的，直接 df  <文件(夹)路径>

 2)用df 或 fdisk -l查看分区挂载情况，直接输入mount或者也可以用cat /etc/mtab，然后pwd找最接近的挂载点信息
 
 
 7. 分区
 
fdisk -l
fdisk /dev/sdb

Partition type
   p   primary (1 primary, 1 extended, 2 free)
   l   logical (numbered from 5)

p(print)
n
p (primary)
n
p (print)
n
e (extended)
p
n
l (logical)

d  1

w  保存

parted

GNU Parted 3.2
Using /dev/sda
Welcome to GNU Parted! Type 'help' to view a list of commands.
(parted) help                                                             
  align-check TYPE N                        check partition N for TYPE(min|opt) alignment
  help [COMMAND]                           print general help, or help on COMMAND
  mklabel,mktable LABEL-TYPE               create a new disklabel (partition table)  gpt  msdos
  mkpart PART-TYPE [FS-TYPE] START END     make a partition
  name NUMBER NAME                         name partition NUMBER as NAME
  print [devices|free|list,all|NUMBER]     display the partition table, available devices, free space, all found partitions, or a particular partition
  quit                                     exit program
  rescue START END                         rescue a lost partition near START and END
  resizepart NUMBER END                    resize partition NUMBER
  rm NUMBER                                delete partition NUMBER
  select DEVICE                            choose the device to edit
  disk_set FLAG STATE                      change the FLAG on selected device
  disk_toggle [FLAG]                       toggle the state of FLAG on selected device
  set NUMBER FLAG STATE                    change the FLAG on partition NUMBER
  toggle [NUMBER [FLAG]]                   toggle the state of FLAG on partition NUMBER
  unit UNIT                                set the default unit to UNIT
  version                                  display the version number and copyright information of GNU Parted
(parted)

unit default MB

parted /dev/sdcq

p (print)
p all (print)

mklabel gpt


mkpart  hellosdc1  0 1000 (会出现提示数据块不对齐)

无保存命令 执行完 mkpart 就写入磁盘

格式化

mkfs.ext3 /dev/sdb1

mkfs -t   /dev/sdb2

文件类型 gpt 模式的分区 查看分区文件格式类型需要用 parted 查看 或者mount 后使用 df-T

注意：格式化

1. 不要对整块硬盘格式化
2. 扩展分区不可以格式化 要格式化逻辑分区



swap 交换分区
这里操作的是 MBR 
 fdisk /dev/sdb
t
6
L

82
p (print)
w

mkswap /dev/sdb6
swapon /dev/sdb6
free
swapoff /dev/sdb6
free


====================10 进程=======================================
ps -A | grep  apt

kill  
kill -9

=====================10.1 Linux终端命令行的快捷键列表===============================================


在shell命令终端中，Ctrl+n相当于方向向下的方向键，Ctrl+p相当于方向向上的方向键。

在命令终端中通过它们或者方向键可以实现对历史命令的快速查找。这也是快速输入命令的技巧。

在命令终端中可以通过Ctrl+r 实现快速检索使用过的历史命令。Ctrl+r中r是retrieve中r。

Ctrl+a：光标回到命令行首。（a：ahead）

Ctrl+e：光标回到命令行尾。（e：end）

Ctrl+b：光标向行首移动一个字符。（b：backwards）

Ctrl+ f：光标向行尾移动一个字符。（f：forwards）

Ctrl+w: 删除光标处到行首的字符。

Ctrl+k：删除光标处到行尾的字符。

Ctrl+u：删除整个命令行文本字符。

Ctrl+h：向行首删除一个字符。

Ctrl+d：向行尾删除一个字符。

Ctrl+y:：粘贴Ctrl+u，Ctrl+k，Ctrl+w删除的文本。

Ctrl+p: 上一个使用的历史命令。（p：previous）

Ctrl+n：下一个使用的历史命令。（n：next ）

Ctrl+r：快速检索历史命令。（r：retrieve）。

Ctrl+t：交换光标所在字符和其前的字符。

Ctrl+i：相当于Tab键。

Ctrl+o：相当于Ctrl+m.

Ctrl+m：相当Enter键。

其他控制键：

Ctrl+s:使终端发呆，静止，可以使快速输出的终端屏幕停下来。

Ctrl+q：退出Ctrl+s引起的发呆。

Ctrl+z：使正在运行在终端的任务，运行于后台。（可用fg恢复）

Ctrl+c：中断终端中正在执行的任务。

Ctrl+d: 在空命令行的情况下可以退出终端。

Ctrl+[ ：相当于Esc键。

Esc键：连续按3次显示所有的支持的终端命令。

Tab键：命令、文件名等自动补全功能。

CTRL + ALT + T: 打开终端
TAB: 自动补全命令或文件名
CTRL + SHIFT + V: 粘贴（Linux中不需要复制的动作，文本被选择就自动被复制）
CTRL + SHIFT + T: 新建标签页
CTRL + D: 关闭标签页
CTRL + L: 清楚屏幕
CTRL + R + 文本: 在输入历史中搜索
CTRL + A: 移动到行首
CTRL + E: 移动到行末
CTRL + C: 终止当前任务
CTRL + Z: 把当前任务放到后台运行（相当于运行命令时后面加&）
~: 表示用户目录路径

==============10.2 vim===============================================
http://vimdoc.sourceforge.net/htmldoc/help.html

================== 102.1fold==============================

form  http://yyq123.blogspot.com/2011/09/vim-fold.html

Vim将折叠等同于行来对待——你可以使用j或k命令，移动跳过包含多行的整个折叠；也可以使用y或d命令，复制或删除某个折叠。

通常在折叠处向左或向右移动光标，或者进入插入模式，都将会自动打开折叠。我们也可以使用以下命令定义快捷键，使用空格键关闭当前打开的折叠，或者打开当前关闭的折叠。

:nnoremap <space> za

按照折叠所依据的规则，可以分为Manual（手工折叠）、Indent（缩进折叠）、Marker（标记折叠）和Syntax（语法折叠）等几种。

Manual Fold

使用以下命令，启用手工折叠。

:set foldmethod=manual

在可视化模式下，使用以下命令，将折叠选中的文本：

zf

通过组合使用移动命令，可以折叠指定的行。例如：使用zf70j命令，将折叠光标之后的70行；使用5zF命令，将当前行及随后4行折叠起来；使用zf7G命令，将当前行至全文第7行折叠起来。

我们也可以使用以下命令，折叠括号（比如()、[]、{}、><等）包围的区域：

zfa(

Vim并不会自动记忆手工折叠。但你可以使用以下命令，来保存当前的折叠状态：

:mkview

在下次打开文档时，使用以下命令，来载入记忆的折叠信息：

:loadview

可以使用以下命令，查看关于手工折叠的帮助信息：

:help fold-manual

Indent Fold

使用以下命令，启用缩进折叠。所有文本将按照（选项shiftwidth 定义的）缩进层次自动折叠。

:set foldmethod=indent

使用zm命令，可以手动折叠缩进；而利用zr命令，则可以打开折叠的缩进。

使用以下命令，将可以根据指定的级别折叠缩进：

:set foldlevel=1

可以使用以下命令，查看关于缩进折叠的帮助信息：

:help fold-indent

Syntax Fold

使用以下命令，启用语法折叠。所有文本将按照语法结构自动折叠。

:set foldmethod=syntax

可以使用以下命令，查看关于语法折叠的帮助信息：

:help fold-syntax

Marker Fold

使用以下命令，启用标记折叠。所有文本将按照特定标记（默认为{{{和}}}）自动折叠。

:set foldmethod=marker

我们可以利用标记折叠，在文本中同时体现结构和内容，并且能够快速跳转到文件的不同部分。

fold_marker

可以使用以下命令，查看关于标记折叠的帮助信息：

:help fold-marker

折叠选项

使用:set foldcolumn=W命令（W是一个0-12的整数），将在屏幕左侧显示一个折叠标识列，分别用“-”和“+”而表示打开和关闭的折叠。

foldcolumn

使用以下命令，可以查看关于折叠的帮助信息：

:help folding

命令小结
zc	关闭当前打开的折叠
zo	打开当前的折叠
zm	关闭所有折叠
zM	关闭所有折叠及其嵌套的折叠
zr	打开所有折叠
zR	打开所有折叠及其嵌套的折叠
zd	删除当前折叠
zE	删除所有折叠
zj	移动至下一个折叠
zk	移动至上一个折叠
zn	禁用折叠
zN	启用折叠
